parameters:
  - name: jobName
  - name: environment # dev/live
  - name: azureSubscription
  - name: resourceGroupName
  - name: databaseName
  - name: sqlServerName

jobs:
  - job: ${{ parameters.jobName }}
    displayName: Reset ${{ parameters.environment }}
    steps:
      - task: AzureAppServiceManage@0
        displayName: "Stop App Service"
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          Action: "Stop Azure App Service"
          WebAppName: "azapp-${{ parameters.environment }}-demos-headless-demo-umbraco"

      - task: AzurePowerShell@5
        displayName: "Reset database from a backup"
        inputs:
          azureSubscription:  ${{ parameters.azureSubscription }}
          ScriptType: "InlineScript"
          Inline: |
            Write-Host "Remove the existing database"
            Remove-AzSqlDatabase `
              -ResourceGroupName "${{ parameters.resourceGroupName }}" `
              -ServerName "${{ parameters.sqlServerName }}" `
              -DatabaseName "${{ parameters.databaseName }}"
            Write-Host "Database removal complete"
            
            Write-Host "Create a new empty database"
            New-AzSqlDatabase `
              -ResourceGroupName "${{ parameters.resourceGroupName }}" `
              -ServerName "${{ parameters.sqlServerName }}" `
              -DatabaseName "${{ parameters.databaseName }}" `
              -RequestedServiceObjectiveName "Basic" `
              -Edition "Basic"

            Write-Host "Import database from .bacpac"
            $importRequest = New-AzSqlDatabaseImport `
              -ResourceGroupName "${{ parameters.resourceGroupName }}" `
              -ServerName "${{ parameters.sqlServerName }}" `
              -DatabaseName "${{ parameters.databaseName }}" `
              -DatabaseMaxSizeBytes "1000000000" `
              -StorageKeyType "StorageAccessKey" `
              -StorageKey "$env:STORAGE_ACCESS_KEY" `
              -StorageUri "$env:DB_BACPAC_URL" `
              -Edition "Basic" `
              -ServiceObjectiveName "Basic" `
              -AdministratorLogin "$env:DATABASE_ADMIN" `
              -AdministratorLoginPassword (ConvertTo-SecureString -String "$env:DATABASE_PASSWORD" -AsPlainText -Force)
            
            # Wait for the import to complete
            do {
                Start-Sleep -Seconds 10
                $status = Get-AzSqlDatabaseImportExportStatus -OperationStatusLink $importRequest.OperationStatusLink
                Write-Host "Import status: $($status.Status)"
            } while ($status.Status -eq "InProgress" -or $status.Status -eq "Pending")

            # Check if the import was successful
            if ($status.Status -eq "Succeeded") {
                Write-Host "Database import succeeded"
            } else {
                Write-Host "Database import failed"
                Write-Host "Error: $($status.ErrorMessage)"
            }
          preferredAzurePowerShellVersion: 11.1.0
        env:
          STORAGE_ACCESS_KEY: $(SECRET_STORAGE_ACCESS_KEY)
          DATABASE_ADMIN: $(SECRET_DATABASE_ADMIN)
          DATABASE_PASSWORD: $(SECRET_DATABASE_PASSWORD)

      - task: AzureAppServiceManage@0
        displayName: "Start App Service"
        inputs:
          azureSubscription:  ${{ parameters.azureSubscription }}
          Action: "Start Azure App Service"
          WebAppName: "azapp-${{ parameters.environment }}-demos-headless-demo-umbraco"
